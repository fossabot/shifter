---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftWebConsole
    openshift.io/host.generated: "true"
  creationTimestamp: "2022-06-02T23:01:33Z"
  labels:
    app: tims-app
  name: tims-app
  namespace: demo-100
  resourceVersion: "8724082"
  selfLink: /apis/route.openshift.io/v1/namespaces/demo-100/routes/tims-app
  uid: f2923184-e2c7-11ec-b9cc-42010a000003
spec:
  rules:
  - host: tims-app-demo-100.okd.shifter.cloud
    http:
      paths:
      - backend:
          service:
            name: tims-app
            port:
              name: 8080-tcp
        path: /
        pathType: ImplementationSpecific
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2022-06-02T23:01:33Z"
  labels:
    app: tims-app
  name: tims-app
  namespace: demo-100
  resourceVersion: "8724081"
  selfLink: /api/v1/namespaces/demo-100/services/tims-app
  uid: f29399fb-e2c7-11ec-b9cc-42010a000003
spec:
  clusterIP: 172.30.35.254
  ports:
  - name: 8080-tcp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    deploymentconfig: tims-app
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2022-06-02T23:01:33Z"
  generation: 1
  labels:
    app: tims-app
  name: tims-app
  namespace: demo-100
  resourceVersion: "8724080"
  selfLink: /apis/apps.openshift.io/v1/namespaces/demo-100/deploymentconfigs/tims-app
  uid: f2921e26-e2c7-11ec-b9cc-42010a000003
spec:
  replicas: 1
  selector:
    matchLabels:
      deploymentconfig: tims-app
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: tims-app
        deploymentconfig: tims-app
    spec:
      containers:
      - image: tims-app:latest
        imagePullPolicy: Always
        name: tims-app
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
