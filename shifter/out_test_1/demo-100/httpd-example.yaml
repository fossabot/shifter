---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    openshift.io/host.generated: "true"
  creationTimestamp: "2022-06-02T23:00:35Z"
  labels:
    app: httpd-example
    template: httpd-example
    template.openshift.io/template-instance-owner: cffe971d-e2c7-11ec-b9cc-42010a000003
  name: httpd-example
  namespace: demo-100
  resourceVersion: "8723603"
  selfLink: /apis/route.openshift.io/v1/namespaces/demo-100/routes/httpd-example
  uid: d003a0ac-e2c7-11ec-b9cc-42010a000003
spec:
  rules:
  - host: httpd-example-demo-100.okd.shifter.cloud
    http:
      paths:
      - backend:
          service:
            name: httpd-example
            port: {}
        path: /
        pathType: ImplementationSpecific
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    description: Exposes and load balances the application pods
  creationTimestamp: "2022-06-02T23:00:35Z"
  labels:
    app: httpd-example
    template: httpd-example
    template.openshift.io/template-instance-owner: cffe971d-e2c7-11ec-b9cc-42010a000003
  name: httpd-example
  namespace: demo-100
  resourceVersion: "8723599"
  selfLink: /api/v1/namespaces/demo-100/services/httpd-example
  uid: d00295a0-e2c7-11ec-b9cc-42010a000003
spec:
  clusterIP: 172.30.201.96
  ports:
  - name: web
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    name: httpd-example
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: Defines how to deploy the application server
    template.alpha.openshift.io/wait-for-ready: "true"
  creationTimestamp: "2022-06-02T23:00:35Z"
  generation: 2
  labels:
    app: httpd-example
    template: httpd-example
    template.openshift.io/template-instance-owner: cffe971d-e2c7-11ec-b9cc-42010a000003
  name: httpd-example
  namespace: demo-100
  resourceVersion: "8723969"
  selfLink: /apis/apps.openshift.io/v1/namespaces/demo-100/deploymentconfigs/httpd-example
  uid: d00a14e4-e2c7-11ec-b9cc-42010a000003
spec:
  replicas: 1
  selector:
    matchLabels:
      name: httpd-example
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: httpd-example
      name: httpd-example
    spec:
      containers:
      - image: docker-registry.default.svc:5000/demo-100/httpd-example@sha256:98a35c1a20f9ff48c56633b6103b4a1f8afcb0bbb3c1659be1a31e7e2e01ec96
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        name: httpd-example
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 3
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 3
        resources:
          limits:
            memory: 512Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
